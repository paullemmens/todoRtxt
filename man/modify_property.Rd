% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/update.R
\name{modify_property}
\alias{modify_property}
\title{Modify Task Property}
\usage{
modify_property(task, prop = NULL, value)
}
\arguments{
\item{task}{A string with one (or, as vector, one or more) task(s) that
follow(s) the todo.txt specification by Gina Trapani. When multiple
tasks are provided, \emph{all} tasks are modified in the same way.}

\item{prop}{Identifier of the property of the task (a string). Can be
postfixed with a colon (e.g. "due:" instead of "due"). Defaults to
NULL implying that then \code{value} needs to be specified as
\code{property:value} instead of only \code{value}.}

\item{value}{New value for the property (a string).}
}
\value{
The updated task(s)
}
\description{
This is a package internal function used to modify a task given an
input and a task to be modified. Because the tasks all are simple
textual strings, modification is implemented by text substitution and
then re-parsing of the task.

The function presumes that all modifications of properties can be based
on strings like "prop:value" (wherein underscores represent a space).
Thus, strictly speaking, tags are not properties of a task.

To implement a degree of flexibility in how to specify properties and
values, \code{prop} defaults to NULL so that \code{value} can (also) be used to
specify new values as \code{prop:value}.

Also in view of flexibility, the function presumes that the user ensures
to maintain the todo.txt specification. So no checking is done to
ascertain whether a property is a valid property of the (original)
specification.

Note that setting the property (of which always only one should exist
in any given task) and new value suitable also enables deleting
properties from a task. For instance, \code{modify_property(task, "due:", "")}
removes the due date from a task. \strong{Does not work yet.}
}
\author{
Paul Lemmens (paul.lemmens@gmail.com)
}
